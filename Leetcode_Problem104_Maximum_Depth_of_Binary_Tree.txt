/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

void depthTree(struct TreeNode* root , int* depth , int* current_depth)
{
    if(!root)
        return ;
    if(root->left)
        (*current_depth)++;
    depthTree(root->left,depth,current_depth);
    if(root->right)
        (*current_depth)++;
    depthTree(root->right,depth,current_depth);
    if((*current_depth) > (*depth))
        *depth = *current_depth ;
    (*current_depth)--;
    return ;
}
int maxDepth(struct TreeNode* root){
    if(!root)
        return 0;
    int depth = 1,current_depth = 1;
    depthTree(root,&depth,&current_depth);
    return depth;
}


--------------------------------------------------------------------------------------------------------------------------


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

int max(int a , int b)
{
    if(a>b)
        return a;
    return b;
}
int maxDepth(struct TreeNode* root){
    if(!root)
        return 0;
    int maxLeft = maxDepth(root->left);
    int maxRight = maxDepth(root->right);
    return max(maxLeft, maxRight)+1;
}